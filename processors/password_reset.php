<?php




header('Content-Type: application/json');
session_start();
function isValidRequest()
{
    $request_method = $_SERVER['REQUEST_METHOD'];
    $expected_request_method = 'POST';
    if ($request_method != $expected_request_method) {
        return false;

    }


    exit("Request failed");

}






require_once '../security/config.php';
require_once '../security/database.php'; // Required for Necessary Database Connections.



class PasswordReset extends DatabaseConnection
{

    private $user_id, $network_error = "connection failed , check your network connection", $data , $password , $error ,
        $password_changed_error = "password changed successfully";


    function __construct()
    {

        parent::__construct();

    }


    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }

    private function isReady(): bool
    {


        if (isset($_POST["data"]))
            return true;
        return false;


    }


    public function setDetails(): bool
    {
        $this->data = json_decode($_POST["data"], true);
        $this->user_id = $this->data["userID"];
        $this->password = md5($this->data["password"]);

        return true;
    }


    public function  deleteRecord() : bool  {

        if($this->delete_record($this->password_recovery_table_name , "user_id" , $this->user_id))
            return true;
        return false;
    }

    public function updateRecord () {

        if($this->update_record($this->users_table_name , "password" , $this->password , "user_id" , $this->user_id))
            return true;
        return false;
    }




    public function Processor() {

        if($this->isReady()){

            $this->setDetails();


            if($this->updateRecord())
                $this->deleteRecord();
                $this->error = Array("success" => 1 , "error" => $this->password_changed_error);
                $this->error = json_encode($this->error);
                return $this->error;
        }
    }

}

$password_reset = new PasswordReset();
echo ($password_reset->Processor());
?>